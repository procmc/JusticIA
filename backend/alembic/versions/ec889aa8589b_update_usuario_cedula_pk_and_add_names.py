"""update_usuario_cedula_pk_and_add_names

Revision ID: ec889aa8589b
Revises: 84b3472443eb
Create Date: 2025-09-04 13:01:11.820116

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ec889aa8589b'
down_revision: Union[str, Sequence[str], None] = '84b3472443eb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # 1. Agregar nuevas columnas como nullable primero
    op.add_column('T_Usuario', sa.Column('CT_Nombre', sa.String(length=100), nullable=True))
    op.add_column('T_Usuario', sa.Column('CT_Apellido_uno', sa.String(length=100), nullable=True))
    op.add_column('T_Usuario', sa.Column('CT_Apellido_dos', sa.String(length=100), nullable=True))
    
    # 2. Actualizar registros existentes con valores por defecto
    op.execute("UPDATE T_Usuario SET CT_Nombre = 'Nombre Pendiente' WHERE CT_Nombre IS NULL")
    op.execute("UPDATE T_Usuario SET CT_Apellido_uno = 'Apellido Pendiente' WHERE CT_Apellido_uno IS NULL")
    
    # 3. Hacer NOT NULL las columnas requeridas
    op.alter_column('T_Usuario', 'CT_Nombre', nullable=False, existing_type=sa.String(length=100))
    op.alter_column('T_Usuario', 'CT_Apellido_uno', nullable=False, existing_type=sa.String(length=100))
    
    # Para SQL Server con columna IDENTITY, necesitamos recrear la tabla
    
    # 4. Crear una nueva columna temporal
    op.add_column('T_Usuario', sa.Column('CN_Id_usuario_temp', sa.String(length=20), nullable=True))
    
    # 5. Actualizar la columna temporal con los valores convertidos
    op.execute("UPDATE T_Usuario SET CN_Id_usuario_temp = CAST(CN_Id_usuario AS VARCHAR(20))")
    
    # 6. Actualizar T_Bitacora para usar valores temporales
    op.add_column('T_Bitacora', sa.Column('CN_Id_usuario_temp', sa.String(length=20), nullable=True))
    op.execute("UPDATE T_Bitacora SET CN_Id_usuario_temp = CAST(CN_Id_usuario AS VARCHAR(20))")
    
    # 7. Eliminar FK constraint de T_Bitacora
    op.execute("ALTER TABLE T_Bitacora DROP CONSTRAINT FK__T_Bitacor__CN_Id__534D60F1")
    
    # 8. Eliminar PK constraint de T_Usuario  
    op.execute("ALTER TABLE T_Usuario DROP CONSTRAINT PK__T_Usuari__043A50353697CAE5")
    
    # 9. Eliminar columnas originales
    op.drop_column('T_Usuario', 'CN_Id_usuario')
    op.drop_column('T_Bitacora', 'CN_Id_usuario')
    
    # 10. Renombrar columnas temporales
    op.execute("EXEC sp_rename 'T_Usuario.CN_Id_usuario_temp', 'CN_Id_usuario', 'COLUMN'")
    op.execute("EXEC sp_rename 'T_Bitacora.CN_Id_usuario_temp', 'CN_Id_usuario', 'COLUMN'")
    
    # 11. Hacer NOT NULL las columnas
    op.alter_column('T_Usuario', 'CN_Id_usuario', nullable=False, existing_type=sa.String(length=20))
    op.alter_column('T_Bitacora', 'CN_Id_usuario', nullable=False, existing_type=sa.String(length=20))
    
    # 12. Recrear PK constraint en T_Usuario
    op.execute("ALTER TABLE T_Usuario ADD CONSTRAINT PK_T_Usuario PRIMARY KEY (CN_Id_usuario)")
    
    # 13. Recrear FK constraint en T_Bitacora
    op.execute("ALTER TABLE T_Bitacora ADD CONSTRAINT FK_T_Bitacora_Usuario FOREIGN KEY (CN_Id_usuario) REFERENCES T_Usuario(CN_Id_usuario)")
    
    # 14. Crear tabla T_Usuario_Expediente DESPUÃ‰S de cambiar los tipos
    op.create_table('T_Usuario_Expediente',
    sa.Column('CN_Id_usuario', sa.String(length=20), nullable=False),
    sa.Column('CN_Id_expediente', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['CN_Id_expediente'], ['T_Expediente.CN_Id_expediente'], ),
    sa.ForeignKeyConstraint(['CN_Id_usuario'], ['T_Usuario.CN_Id_usuario'], ),
    sa.PrimaryKeyConstraint('CN_Id_usuario', 'CN_Id_expediente')
    )
    
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('T_Usuario', 'CN_Id_usuario',
               existing_type=sa.String(length=20),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=False,
               existing_server_default=sa.Identity(always=False, start=1, increment=1))
    op.drop_column('T_Usuario', 'CT_Apellido_dos')
    op.drop_column('T_Usuario', 'CT_Apellido_uno')
    op.drop_column('T_Usuario', 'CT_Nombre')
    op.alter_column('T_Bitacora', 'CN_Id_usuario',
               existing_type=sa.String(length=20),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_table('T_Usuario_Expediente')
    # ### end Alembic commands ###
